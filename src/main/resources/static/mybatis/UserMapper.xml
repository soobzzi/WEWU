<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
	24.06.03 작성
  -->
  
<mapper namespace="com.example.UserMapper">

    <resultMap id="UserResultMap" type="User">
        <id property="userId" 				column="user_id" 		jdbcType="VARCHAR"/>
        <result property="email" 			column="email"			jdbcType="VARCHAR"/>
        <result property="phoneNum" 		column="phone_num"		jdbcType="VARCHAR"/>
        <result property="residentNum" 		column="resident_num"	jdbcType="VARCHAR"/>
        <result property="nickname" 		column="nickname"		jdbcType="VARCHAR"/>
        <result property="userPwd" 			column="user_pwd"		jdbcType="VARCHAR"/>
        <result property="addr" 			column="addr"			jdbcType="VARCHAR"/>
        <result property="getAddr" 			column="get_addr"		jdbcType="VARCHAR"/>
        <result property="gender" 			column="gender"			jdbcType="VARCHAR"/>
        <result property="currentPoint" 	column="current_point"	jdbcType="INT"/>
        <result property="role" 			column="role"			jdbcType="VARCHAR"/>
        <result property="userName" 		column="user_name"		jdbcType="VARCHAR"/>
    </resultMap>

    <insert id="addUser" parameterType="User">
        INSERT INTO user (user_id, email, phone_num, resident_num, nickname, user_pwd, addr, get_addr, gender, current_point, role, user_name)
        VALUES (#{userId}, #{email}, #{phoneNum}, #{residentNum}, #{nickname}, #{userPwd}, #{addr}, #{getAddr}, #{gender}, #{currentPoint}, #{role}, #{userName})
    </insert>

    <update id="updateUser" parameterType="User">
        UPDATE user
        SET email = #{email},
            phone_num = #{phoneNum},
            nickname = #{nickname},
            user_pwd = #{userPwd},
            addr = #{addr},
            get_addr = #{getAddr},
        WHERE user_id = #{userId}
    </update>

    <!-- <delete id="deleteUser" parameterType="String">
        DELETE 
        FROM user 
        WHERE user_id = #{userId}
    </delete> -->

	<select  id="getUserList"  parameterType="search"	resultMap="userSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT user_id , userName , email
											FROM user
											<if test="searchCondition != null">
												<where>
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 				user_id = #{searchKeyword}
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				userName = #{searchKeyword}
													</if>
												</where>
											</if>
											ORDER BY user_id ) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>

    <select id="getUser" parameterType="String" resultMap="UserResultMap">
        SELECT * 
        FROM user 
        WHERE user_id = #{userId}
    </select>

    <!-- <select id="authUser" parameterType="map" resultMap="UserResultMap">
        SELECT * 
        FROM user 
        WHERE user_id = #{userId} AND user_pwd = #{userPwd}
    </select> -->

    <select id="findUserId" parameterType="String" resultType="String">
        SELECT user_id
        FROM user
        WHERE phone_num = #{phoneNum} and userName =#{user
    </select>

    <select id="findUserPwd" parameterType="String" resultType="String">
        SELECT user_pwd
        FROM user
        WHERE user_id = #{userId}
    </select>

<!--     <update id="quitUser" parameterType="String">
        DELETE 
        FROM user 
        WHERE user_id = #{userId}
    </update> -->
    
    <update id="deleteUser" parameterType="String">
	     UPDATE user 
	     SET role = '4' 
	     WHERE role = 2 or role= 3 and user_id = #{userId}
     </update>
    
    <select id="checkNickName" parameterType="String" resultType="boolean">
	    SELECT CASE WHEN COUNT(*) > 0 THEN true ELSE false END
	    FROM user
	    WHERE nickname = #{nickname}
	</select>
    
    <select id="checkUserId" parameterType="String" resultType="boolean">
	    SELECT CASE WHEN COUNT(*) > 0 THEN true ELSE false END
	    FROM user
	    WHERE user_id = #{userId}
	</select>
    
</mapper>
